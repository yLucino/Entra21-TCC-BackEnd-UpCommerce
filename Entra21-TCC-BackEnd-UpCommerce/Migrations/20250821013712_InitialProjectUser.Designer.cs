// <auto-generated />
using System;
using Entra21_TCC_BackEnd_UpCommerce.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entra21_TCC_BackEnd_UpCommerce.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20250821013712_InitialProjectUser")]
    partial class InitialProjectUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.Cdk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CdkId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CdkId1")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CdkId1");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StyleId");

                    b.ToTable("Cdks");
                });

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UrlLogo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.Style", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlignSelf")
                        .HasColumnType("longtext");

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("longtext");

                    b.Property<string>("BorderColor")
                        .HasColumnType("longtext");

                    b.Property<int?>("BorderRadiusBottomLeft")
                        .HasColumnType("int");

                    b.Property<int?>("BorderRadiusBottomRight")
                        .HasColumnType("int");

                    b.Property<int?>("BorderRadiusTopLeft")
                        .HasColumnType("int");

                    b.Property<int?>("BorderRadiusTopRight")
                        .HasColumnType("int");

                    b.Property<int?>("BorderSize")
                        .HasColumnType("int");

                    b.Property<string>("BorderType")
                        .HasColumnType("longtext");

                    b.Property<int?>("Bottom")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<string>("Cursor")
                        .HasColumnType("longtext");

                    b.Property<string>("Display")
                        .HasColumnType("longtext");

                    b.Property<string>("FlexAlign")
                        .HasColumnType("longtext");

                    b.Property<string>("FlexAlignItems")
                        .HasColumnType("longtext");

                    b.Property<string>("FlexDirection")
                        .HasColumnType("longtext");

                    b.Property<int?>("FlexGap")
                        .HasColumnType("int");

                    b.Property<string>("FlexJustify")
                        .HasColumnType("longtext");

                    b.Property<string>("FlexWrap")
                        .HasColumnType("longtext");

                    b.Property<string>("FontFamily")
                        .HasColumnType("longtext");

                    b.Property<int?>("FontSize")
                        .HasColumnType("int");

                    b.Property<string>("FontWeight")
                        .HasColumnType("longtext");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("HoverBorderRadius")
                        .HasColumnType("int");

                    b.Property<string>("HoverScale")
                        .HasColumnType("longtext");

                    b.Property<int?>("HoverShadowBlur")
                        .HasColumnType("int");

                    b.Property<string>("HoverShadowColor")
                        .HasColumnType("longtext");

                    b.Property<int?>("HoverShadowX")
                        .HasColumnType("int");

                    b.Property<int?>("HoverShadowY")
                        .HasColumnType("int");

                    b.Property<string>("IconSource")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageSource")
                        .HasColumnType("longtext");

                    b.Property<int?>("Left")
                        .HasColumnType("int");

                    b.Property<string>("LinkSource")
                        .HasColumnType("longtext");

                    b.Property<int?>("MarginBottom")
                        .HasColumnType("int");

                    b.Property<int?>("MarginLeft")
                        .HasColumnType("int");

                    b.Property<int?>("MarginRight")
                        .HasColumnType("int");

                    b.Property<int?>("MarginTop")
                        .HasColumnType("int");

                    b.Property<string>("NewComponentId")
                        .HasColumnType("longtext");

                    b.Property<int?>("Opacity")
                        .HasColumnType("int");

                    b.Property<int?>("PaddingBottom")
                        .HasColumnType("int");

                    b.Property<int?>("PaddingLeft")
                        .HasColumnType("int");

                    b.Property<int?>("PaddingRight")
                        .HasColumnType("int");

                    b.Property<int?>("PaddingTop")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<int?>("Right")
                        .HasColumnType("int");

                    b.Property<int?>("ShadowBlur")
                        .HasColumnType("int");

                    b.Property<string>("ShadowColor")
                        .HasColumnType("longtext");

                    b.Property<int?>("ShadowX")
                        .HasColumnType("int");

                    b.Property<int?>("ShadowY")
                        .HasColumnType("int");

                    b.Property<string>("TextAlign")
                        .HasColumnType("longtext");

                    b.Property<string>("TextContent")
                        .HasColumnType("longtext");

                    b.Property<int?>("Top")
                        .HasColumnType("int");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.Property<int?>("ZIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("urlInstagram")
                        .HasColumnType("longtext");

                    b.Property<string>("urlLinkedin")
                        .HasColumnType("longtext");

                    b.Property<string>("urlPhoto")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.Cdk", b =>
                {
                    b.HasOne("Entra21_TCC_BackEnd_UpCommerce.Models.Cdk", null)
                        .WithMany("Children")
                        .HasForeignKey("CdkId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entra21_TCC_BackEnd_UpCommerce.Models.Project", null)
                        .WithMany("Component")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entra21_TCC_BackEnd_UpCommerce.Models.Style", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Style");
                });

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.Project", b =>
                {
                    b.HasOne("Entra21_TCC_BackEnd_UpCommerce.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.Cdk", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.Project", b =>
                {
                    b.Navigation("Component");
                });

            modelBuilder.Entity("Entra21_TCC_BackEnd_UpCommerce.Models.User", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
